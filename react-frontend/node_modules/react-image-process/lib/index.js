'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.OUTPUT_TYPE = exports.FILTER_TYPE = exports.WATER_MARK_TYPE = exports.MODE_TYPE = undefined;

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _photoMagician = require('photo-magician');

var _photoMagician2 = _interopRequireDefault(_photoMagician);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @name react-image-process
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @version 0.2.0
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

var MODE_TYPE = exports.MODE_TYPE = {
  base64: 'base64',
  clip: 'clip',
  compress: 'compress',
  rotate: 'rotate',
  waterMark: 'waterMark',
  filter: 'filter',
  primaryColor: 'primaryColor'
};

var WATER_MARK_TYPE = exports.WATER_MARK_TYPE = {
  image: 'image',
  text: 'text'
};

var FILTER_TYPE = exports.FILTER_TYPE = {
  vintage: 'vintage',
  blackWhite: 'blackWhite',
  relief: 'relief',
  blur: 'blur'
};

var OUTPUT_TYPE = exports.OUTPUT_TYPE = {
  blob: 'blob',
  dataUrl: 'dataUrl'
};

var MODE = Object.values(MODE_TYPE);
var WATER_MARK = Object.values(WATER_MARK_TYPE);
var FILTER = Object.values(FILTER_TYPE);
var OUTPUT = Object.values(OUTPUT_TYPE);

var mainPrefix = 'react-image-process';

var ReactImageProcess = function (_PureComponent) {
  _inherits(ReactImageProcess, _PureComponent);

  function ReactImageProcess(props) {
    var _this2 = this;

    _classCallCheck(this, ReactImageProcess);

    var _this = _possibleConstructorReturn(this, (ReactImageProcess.__proto__ || Object.getPrototypeOf(ReactImageProcess)).call(this, props));

    _this.base64Handler = function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee(cover, params) {
        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return _this.photoMagician.toBase64Url(_extends({ cover: cover }, params));

              case 2:
                return _context.abrupt('return', _context.sent);

              case 3:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, _this2);
      }));

      return function (_x, _x2) {
        return _ref.apply(this, arguments);
      };
    }();

    _this.clipHandler = function () {
      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee2(cover, params) {
        return _regenerator2.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return _this.photoMagician.clipImage(_extends({ cover: cover }, params));

              case 2:
                return _context2.abrupt('return', _context2.sent);

              case 3:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, _this2);
      }));

      return function (_x3, _x4) {
        return _ref2.apply(this, arguments);
      };
    }();

    _this.compressHandler = function () {
      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee3(cover, params) {
        return _regenerator2.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return _this.photoMagician.compressImage(_extends({ cover: cover }, params));

              case 2:
                return _context3.abrupt('return', _context3.sent);

              case 3:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, _this2);
      }));

      return function (_x5, _x6) {
        return _ref3.apply(this, arguments);
      };
    }();

    _this.rotateHandler = function () {
      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee4(cover, params) {
        return _regenerator2.default.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.next = 2;
                return _this.photoMagician.rotateImage(_extends({ cover: cover }, params));

              case 2:
                return _context4.abrupt('return', _context4.sent);

              case 3:
              case 'end':
                return _context4.stop();
            }
          }
        }, _callee4, _this2);
      }));

      return function (_x7, _x8) {
        return _ref4.apply(this, arguments);
      };
    }();

    _this.filterHandler = function () {
      var _ref6 = _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee5(cover, _ref5) {
        var filterType = _ref5.filterType,
            params = _objectWithoutProperties(_ref5, ['filterType']);

        return _regenerator2.default.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                _context5.next = 2;
                return _this.photoMagician.addImageFilter(_extends({
                  cover: cover
                }, params, {
                  mode: filterType
                }));

              case 2:
                return _context5.abrupt('return', _context5.sent);

              case 3:
              case 'end':
                return _context5.stop();
            }
          }
        }, _callee5, _this2);
      }));

      return function (_x9, _x10) {
        return _ref6.apply(this, arguments);
      };
    }();

    _this.waterMarkHandler = function () {
      var _ref8 = _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee6(cover, _ref7) {
        var waterMarkType = _ref7.waterMarkType,
            params = _objectWithoutProperties(_ref7, ['waterMarkType']);

        return _regenerator2.default.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                _context6.next = 2;
                return _this.photoMagician.addWaterMark(_extends({
                  cover: cover
                }, params, {
                  mode: waterMarkType
                }));

              case 2:
                return _context6.abrupt('return', _context6.sent);

              case 3:
              case 'end':
                return _context6.stop();
            }
          }
        }, _callee6, _this2);
      }));

      return function (_x11, _x12) {
        return _ref8.apply(this, arguments);
      };
    }();

    _this.primaryColorHandler = function () {
      var _ref9 = _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee7(cover) {
        return _regenerator2.default.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                _context7.next = 2;
                return _this.photoMagician.getPrimaryColor({ cover: cover });

              case 2:
                return _context7.abrupt('return', _context7.sent);

              case 3:
              case 'end':
                return _context7.stop();
            }
          }
        }, _callee7, _this2);
      }));

      return function (_x13) {
        return _ref9.apply(this, arguments);
      };
    }();

    _this.baseHandler = function () {
      var _ref10 = _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee8(mode, options) {
        var onComplete, children, params, images, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _loop, _iterator, _step, _ret;

        return _regenerator2.default.wrap(function _callee8$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                _context9.prev = 0;
                onComplete = _this.props.onComplete;
                children = options.children, params = _objectWithoutProperties(options, ['children']);
                images = Array.isArray(children) ? [].concat(_toConsumableArray(options.children)) : [options.children];
                _iteratorNormalCompletion = true;
                _didIteratorError = false;
                _iteratorError = undefined;
                _context9.prev = 7;
                _loop = /*#__PURE__*/_regenerator2.default.mark(function _loop() {
                  var _step$value, i, src, data;

                  return _regenerator2.default.wrap(function _loop$(_context8) {
                    while (1) {
                      switch (_context8.prev = _context8.next) {
                        case 0:
                          _step$value = _slicedToArray(_step.value, 2), i = _step$value[0], src = _step$value[1].props.src;

                          if (src) {
                            _context8.next = 3;
                            break;
                          }

                          return _context8.abrupt('return', 'continue');

                        case 3:
                          _context8.next = 5;
                          return _this[mode + 'Handler'](src, params);

                        case 5:
                          data = _context8.sent;

                          if (!(mode !== MODE_TYPE['primaryColor'])) {
                            _context8.next = 11;
                            break;
                          }

                          if (!(params.outputType === OUTPUT_TYPE.dataUrl)) {
                            _context8.next = 9;
                            break;
                          }

                          return _context8.abrupt('return', {
                            v: _this.currentImgNodes[i].src = data
                          });

                        case 9:
                          _this.currentImgNodes[i].src = URL.createObjectURL(data);
                          _this.currentImgNodes[i].onload = function () {
                            URL.revokeObjectURL(data);
                          };

                        case 11:
                          if (onComplete && onComplete instanceof Function) {
                            onComplete(data);
                          }

                        case 12:
                        case 'end':
                          return _context8.stop();
                      }
                    }
                  }, _loop, _this2);
                });
                _iterator = images.entries()[Symbol.iterator]();

              case 10:
                if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
                  _context9.next = 22;
                  break;
                }

                return _context9.delegateYield(_loop(), 't0', 12);

              case 12:
                _ret = _context9.t0;
                _context9.t1 = _ret;
                _context9.next = _context9.t1 === 'continue' ? 16 : 17;
                break;

              case 16:
                return _context9.abrupt('continue', 19);

              case 17:
                if (!((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object")) {
                  _context9.next = 19;
                  break;
                }

                return _context9.abrupt('return', _ret.v);

              case 19:
                _iteratorNormalCompletion = true;
                _context9.next = 10;
                break;

              case 22:
                _context9.next = 28;
                break;

              case 24:
                _context9.prev = 24;
                _context9.t2 = _context9['catch'](7);
                _didIteratorError = true;
                _iteratorError = _context9.t2;

              case 28:
                _context9.prev = 28;
                _context9.prev = 29;

                if (!_iteratorNormalCompletion && _iterator.return) {
                  _iterator.return();
                }

              case 31:
                _context9.prev = 31;

                if (!_didIteratorError) {
                  _context9.next = 34;
                  break;
                }

                throw _iteratorError;

              case 34:
                return _context9.finish(31);

              case 35:
                return _context9.finish(28);

              case 36:
                _context9.next = 41;
                break;

              case 38:
                _context9.prev = 38;
                _context9.t3 = _context9['catch'](0);

                /*eslint-disable no-console */
                console.error('[' + mode + 'Handler-error]:', _context9.t3);

              case 41:
              case 'end':
                return _context9.stop();
            }
          }
        }, _callee8, _this2, [[0, 38], [7, 24, 28, 36], [29,, 31, 35]]);
      }));

      return function (_x14, _x15) {
        return _ref10.apply(this, arguments);
      };
    }();

    _this.imageHandle = function () {
      var _ref12 = _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee9(_ref11) {
        var mode = _ref11.mode,
            options = _objectWithoutProperties(_ref11, ['mode']);

        return _regenerator2.default.wrap(function _callee9$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                _context10.next = 2;
                return _this.baseHandler(MODE_TYPE[mode], options);

              case 2:
              case 'end':
                return _context10.stop();
            }
          }
        }, _callee9, _this2);
      }));

      return function (_x16) {
        return _ref12.apply(this, arguments);
      };
    }();

    return _this;
  }

  _createClass(ReactImageProcess, [{
    key: 'render',
    value: function render() {
      var _this3 = this;

      var _props = this.props,
          mode = _props.mode,
          children = _props.children,
          style = _props.style,
          className = _props.className;


      var _className = mainPrefix + '-' + mode;

      return _react2.default.createElement(
        'span',
        _extends({
          className: (0, _classnames2.default)(className, _className),
          ref: function ref(node) {
            return _this3.node = node;
          }
        }, style),
        children
      );
    }
    /**
     * @description get base64 data of the image
     * @param {Object} options
     * @param {String | Object} options.cover cover url | image element node   The next cover parameter is the same as this.
     * @return base64 data
     */


    /**
     * @description cut clip of the image
     * @param {object} Options
     * @param {String | Object} options.cover
     * @param {Number} options.scale Image zooming   default '1.0'
     * @param {Array} options.coordinate [[x1,y1],[x2,y2]]
     * @return image node
     */

    /**
     * @description compress of the image
     * @param {Object} options
     * @param {String | Object} options.cover
     * @param {Number}  options.quality range(0-1) default '0.92'
     * @return base64 data
     */

    /**
     * @description Rotate the image
     * @param {String | Object} cover 图片地址或节点
     * @param {Number} rotate 旋转比例 (0 -360 ) °
     */

    /**
     * @param {Object} options
     * @param {String | Object} options.cover
     * @param {String} options.mode  filter name  "vintage" | "blackWhite" | "relief" | "blur"
     */

    /**
     * @description get primary color of the image
     * @param {Object} options
     * @param {String | Object} options.cover
     * @return primaryColor
     */

    //图片处理

  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.photoMagician = undefined;
      this.currentImgNodes = undefined;
      this.node = undefined;
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.currentImgNodes = this.node.querySelectorAll('img');
      this.photoMagician = new _photoMagician2.default();
      this.imageHandle(this.props);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var _this4 = this;

      if (Object.keys(nextProps).some(function (key) {
        return !Object.is(nextProps[key], _this4.props[key]);
      })) {
        this.imageHandle(nextProps);
      }
    }
  }]);

  return ReactImageProcess;
}(_react.PureComponent);

ReactImageProcess.defaultProps = {
  mode: MODE_TYPE['base64'],
  waterMarkType: WATER_MARK_TYPE['text'],
  filterType: FILTER_TYPE['vintage'],
  outputType: OUTPUT_TYPE['dataUrl'],
  waterMark: mainPrefix,
  rotate: 0,
  quality: 1.0,
  coordinate: [0, 0],
  width: 50,
  height: 50,
  opacity: 0.5,
  fontColor: 'rgba(255,255,255,.5)',
  fontSize: 20,
  fontBold: true,
  onComplete: function onComplete() {}
};
ReactImageProcess.propTypes = {
  mode: _propTypes2.default.oneOf(MODE),
  waterMarkType: _propTypes2.default.oneOf(WATER_MARK),
  filterType: _propTypes2.default.oneOf(FILTER),
  outputType: _propTypes2.default.oneOf(OUTPUT),
  waterMark: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.element, _propTypes2.default.node]),
  scale: _propTypes2.default.number,
  rotate: _propTypes2.default.number,
  quality: _propTypes2.default.number,
  width: _propTypes2.default.number,
  height: _propTypes2.default.number,
  fontColor: _propTypes2.default.string,
  fontSize: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  fontBold: _propTypes2.default.bool,
  coordinate: _propTypes2.default.array,
  onComplete: _propTypes2.default.func
};
exports.default = ReactImageProcess;